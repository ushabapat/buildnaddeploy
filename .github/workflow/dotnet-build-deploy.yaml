name: .NET Build and Deploy

on:
  push:
    branches:
      - main  # Set this to the branch you want to trigger the deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1'  # Set this to the .NET Core version you need

    - name: Restore dependencies
      run: dotnet restore

    - name: Build with SonarQube analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        # Optionally install SonarScanner for .NET if not already included in your project
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"project-key" /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.login="$SONAR_TOKEN"
        dotnet build
        dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"

    - name: Build Docker image
      run: docker build -t myapp:${{ github.sha }} .

    - name: Scan the Docker image with Trivy
      run: |
        docker save myapp:${{ github.sha }} -o image.tar
        trivy image --input image.tar

    - name: Log in to Artifactory
      run: docker login -u ${{ secrets.ARTIFACTORY_USERNAME }} -p ${{ secrets.ARTIFACTORY_PASSWORD }} ${{ secrets.ARTIFACTORY_URL }}

    - name: Push Docker image to Artifactory
      run: docker push ${{ secrets.ARTIFACTORY_URL }}/myapp:${{ github.sha }}

    - name: Clone the deployment repository
      uses: actions/checkout@v2
      with:
        repository: my-org/deployment-repo
        token: ${{ secrets.DEPLOYMENT_REPO_TOKEN }}
        path: deployment-repo

    - name: Update image tag in deployment repository
      run: |
        cd deployment-repo
        # Assuming you have a file like deployment.yaml with the image tag to replace
        sed -i 's|image: myapp:.*|image: myapp:${{ github.sha }}|' deployment.yaml
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git commit -am "Update image tag to ${{ github.sha }}"
        git push

    - name: Trigger Argo CD (optional)
      run: |
        # You can trigger Argo CD using its CLI or API. This is an example using curl to call the Argo CD API.
        curl -X POST ${{ secrets.ARGOCD_SERVER }}/api/v1/applications/nginx/sync \
          -H 'Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}' \
          -H 'Content-Type: application/json' \
          --data '{"revision": "${{ github.sha }}"}'
